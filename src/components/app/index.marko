import todoApp from '~/src/app/todo';

static function filterTodos(input) {
    var remainingCount = 0;
    var completedCount = 0;
    var filter = input.filter;

    var filteredTodos = input.todos.filter(function(todo) {
        if (todo.completed) {
            completedCount++;
        } else {
            remainingCount++;
        }

        if (todo.pending) {
            return true;
        } else if (filter === 'active') {
            return !todo.completed;
        } else if (filter === 'completed') {
            return todo.completed;
        } else {
            return true;
        }
    });

    return {
        todos: filteredTodos,
        remainingCount: remainingCount,
        completedCount: completedCount,
        filter: filter
    };
}

class {
    onMount() {
        var self = this;

        todoApp.todos = this.input.todos;
        todoApp.filter = this.input.filter;

        // Subscribe to the change state event. In response
        // to a state change event we will rerender the entire
        // app using the new state.
        this.subscribeTo(todoApp)
            .on('change', function(newState) {
                self.input = newState;
            });
    }
}

$ var todos = filterTodos(input);

<div>
    <app-header/>
    <app-main(todos)/>
    <app-footer(todos)/>
</div>
